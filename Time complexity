{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOn/VU3wgBx6UwhVnKRyBEx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anika81199/Bio/blob/main/Time%20complexity\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Time complexity questions**"
      ],
      "metadata": {
        "id": "o1iclbqVQxJA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1."
      ],
      "metadata": {
        "id": "TjEkVcwgQq0U"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lCcRNBd9LlGs"
      },
      "outputs": [],
      "source": [
        "for i in range(n):\n",
        "    modified_i = i * k"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ans: O[log_k(n)]"
      ],
      "metadata": {
        "id": "4f5_zIWVQ7x9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2."
      ],
      "metadata": {
        "id": "3LaBzastREq3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "value = 0;\n",
        "for i in range(n):\n",
        "  for j in range(i):\n",
        "    value=value+1"
      ],
      "metadata": {
        "id": "9orlf0lqRCVM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ans: n(n-1)/2"
      ],
      "metadata": {
        "id": "7PGN9VypRJ5m"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "3."
      ],
      "metadata": {
        "id": "D1ANys87ROho"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a = 0\n",
        "i = N\n",
        "while (i > 0):\n",
        "  a += i\n",
        "  i //= 2"
      ],
      "metadata": {
        "id": "i-ywkfP6RN-C"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ans: O[log n]"
      ],
      "metadata": {
        "id": "YPlvqCD8Rx6_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "4."
      ],
      "metadata": {
        "id": "CwfkcQBRSGp8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "k = 0;\n",
        "for i in range(n//2,n):\n",
        "  for j in range(2,n,pow(2,j)):\n",
        "        k = k + n / 2;"
      ],
      "metadata": {
        "id": "pfxd5zUdRz_f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ans: O[n logn]"
      ],
      "metadata": {
        "id": "UgwPd7AhTgs2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "5."
      ],
      "metadata": {
        "id": "iiameNpTTpZc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a = 0;\n",
        "for i in range(N):\n",
        "  for j in reversed(range(i,N)):\n",
        "    a = a + i + j;"
      ],
      "metadata": {
        "id": "pESPwzpzTjmE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O[n^2]"
      ],
      "metadata": {
        "id": "5rPgv0l4TpBn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "6."
      ],
      "metadata": {
        "id": "XBFA96uwTvRT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a = 0\n",
        "b = 0\n",
        "for i in range(N):\n",
        "  a = a + random()\n",
        "\n",
        "for i in range(M):\n",
        "  b= b + random()"
      ],
      "metadata": {
        "id": "P0RGGbMZTsyq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O[N+M]"
      ],
      "metadata": {
        "id": "uB9rQ_ODTw3J"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "7."
      ],
      "metadata": {
        "id": "E5-Lp7BZdIEG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(N):\n",
        "  a = a + random()\n",
        "\n",
        "for i in range(N):\n",
        "  b= b + random()"
      ],
      "metadata": {
        "id": "oMGSfiw2Tx6Z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O[2N] = O[N]"
      ],
      "metadata": {
        "id": "phPd94EEdFS0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "8. Here, random(int n) spends one unit of time to return its value"
      ],
      "metadata": {
        "id": "tcKS5jTzvWg9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "def function(n):\n",
        "    if n <= 0:\n",
        "        return 0\n",
        "    else:\n",
        "        i = random.randint(0, n - 1)\n",
        "        print(\"this\")\n",
        "        return function(i) + function(n - 1 - i)"
      ],
      "metadata": {
        "id": "dGFHRZ7uvXhp"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "= 6 units of time"
      ],
      "metadata": {
        "id": "jsrp2IHkyvQa"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "9."
      ],
      "metadata": {
        "id": "_6QzEhbXzRN6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def is_prime(n):\n",
        "    if n == 1:\n",
        "        return False\n",
        "\n",
        "    for i in range(2, int(n**0.5) + 1):\n",
        "        if n % i == 0:\n",
        "            return False\n",
        "\n",
        "    return True"
      ],
      "metadata": {
        "id": "6e_B46ZixR6T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "O[sqrt(n)]"
      ],
      "metadata": {
        "id": "PNKMQbpZ1Rbr"
      }
    }
  ]
}